@startuml

box client
Actor "Kafka Client"
Participant MetadataRequest
end box

Control "System"

System --> Kroxylicious: main
Kroxylicious --> KafkaProxy ** : startup

loop [for all unique virtual clusters bootstrap listeners]
  KafkaProxy --> NetFilter ** : new

  KafkaProxy --> KafkaProxyInitializer ** : new(netFilter)
  KafkaProxy --> KafkaProxyInitializer: startup

  KafkaProxy --> ServerChannel ** : bind
end


"Kafka Client" --> ServerChannel: connect
Participant Channel as DownstreamChannel
ServerChannel --> DownstreamChannel **: new
DownstreamChannel -> KafkaProxyInitializer: initChannel

Participant BrokerTopologySnoopingMetadataFilter #red
KafkaProxyInitializer --> BrokerTopologySnoopingMetadataFilter ** : new 
note right
  this is an internal filter that is hard-wired into the filter chain.
end note

KafkaProxyInitializer --> KafkaProxyFrontendHandler ** : new


"Kafka Client" -> DownstreamChannel: send(...)
DownstreamChannel -> KafkaProxyFrontendHandler:channelRead
KafkaProxyFrontendHandler -> NetFilter:selectServer
NetFilter -> KafkaProxyFrontendHandler:initiateConnect

Participant Channel as UpstreamChannel
KafkaProxyFrontendHandler --> UpstreamChannel ** : new

KafkaProxyFrontendHandler --> KafkaProxyBackendHandler ** : new
UpstreamChannel -> Broker1 : connect


"Kafka Client" -> MetadataRequest ** : new
"Kafka Client" -> DownstreamChannel: send(MetadataRequest)
DownstreamChannel -> KafkaProxyFrontendHandler:channelRead

DownstreamChannel -> BrokerTopologySnoopingMetadataFilter:onMetadataRequest(MetadataRequest)

box kafka cluster
Participant Broker as Broker1
Participant Broker as Broker2
Participant MetadataResponse
end box



@enduml
